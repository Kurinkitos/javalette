-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Par.y
-----------------------------------------------------------------------------

state 79 contains 1 shift/reduce conflicts.
state 149 contains 1 shift/reduce conflicts.

rule 44 is unused
rule 45 is unused
rule 46 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	Ident -> L_Ident                                   (1)
	Double -> L_doubl                                  (2)
	Integer -> L_integ                                 (3)
	String -> L_quoted                                 (4)
	Prog -> ListTopDef                                 (5)
	TopDef -> Type Ident '(' ListArg ')' Blk           (6)
	TopDef -> 'typedef' 'struct' Ident '*' Ident ';'   (7)
	TopDef -> 'struct' Ident '{' ListMem '}' ';'       (8)
	ListTopDef -> TopDef                               (9)
	ListTopDef -> TopDef ListTopDef                    (10)
	Arg -> Type Ident                                  (11)
	ListArg ->                                         (12)
	ListArg -> Arg                                     (13)
	ListArg -> Arg ',' ListArg                         (14)
	Mem -> Type Ident ';'                              (15)
	ListMem -> Mem                                     (16)
	ListMem -> Mem ListMem                             (17)
	Blk -> '{' ListStmt '}'                            (18)
	ListStmt ->                                        (19)
	ListStmt -> Stmt ListStmt                          (20)
	Stmt -> ';'                                        (21)
	Stmt -> Blk                                        (22)
	Stmt -> Type ListItem ';'                          (23)
	Stmt -> Expr6 '=' Expr ';'                         (24)
	Stmt -> Ident '++' ';'                             (25)
	Stmt -> Ident '--' ';'                             (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' '(' Expr ')' Stmt                     (29)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (30)
	Stmt -> 'while' '(' Expr ')' Stmt                  (31)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (32)
	Stmt -> Expr ';'                                   (33)
	Item -> Ident                                      (34)
	Item -> Ident '=' Expr                             (35)
	ListItem -> Item                                   (36)
	ListItem -> Item ',' ListItem                      (37)
	Type -> Type '[]'                                  (38)
	Type -> 'int'                                      (39)
	Type -> 'double'                                   (40)
	Type -> 'boolean'                                  (41)
	Type -> 'void'                                     (42)
	Type -> Ident                                      (43)
	ListType ->                                        (44)
	ListType -> Type                                   (45)
	ListType -> Type ',' ListType                      (46)
	Expr7 -> 'new' NItem                               (47)
	Expr7 -> Expr8                                     (48)
	Expr6 -> Expr6 '[' Expr ']'                        (49)
	Expr6 -> Expr6 '->' Ident                          (50)
	Expr6 -> Expr6 '.' Ident                           (51)
	Expr6 -> Ident                                     (52)
	Expr6 -> Integer                                   (53)
	Expr6 -> Double                                    (54)
	Expr6 -> 'true'                                    (55)
	Expr6 -> 'false'                                   (56)
	Expr6 -> Ident '(' ListExpr ')'                    (57)
	Expr6 -> String                                    (58)
	Expr6 -> Expr7                                     (59)
	Expr5 -> '-' Expr5                                 (60)
	Expr5 -> '!' Expr5                                 (61)
	Expr5 -> Expr6                                     (62)
	Expr4 -> Expr4 MulOp Expr5                         (63)
	Expr4 -> Expr5                                     (64)
	Expr3 -> Expr3 AddOp Expr4                         (65)
	Expr3 -> Expr4                                     (66)
	Expr2 -> Expr2 RelOp Expr3                         (67)
	Expr2 -> Expr3                                     (68)
	Expr1 -> Expr2 '&&' Expr1                          (69)
	Expr1 -> Expr2                                     (70)
	Expr -> Expr1 '||' Expr                            (71)
	Expr -> Expr1                                      (72)
	Expr8 -> Expr9                                     (73)
	Expr9 -> '(' Expr ')'                              (74)
	ListExpr ->                                        (75)
	ListExpr -> Expr                                   (76)
	ListExpr -> Expr ',' ListExpr                      (77)
	NItem -> Type '[' Expr ']'                         (78)
	NItem -> Type                                      (79)
	AddOp -> '+'                                       (80)
	AddOp -> '-'                                       (81)
	MulOp -> '*'                                       (82)
	MulOp -> '/'                                       (83)
	MulOp -> '%'                                       (84)
	RelOp -> '<'                                       (85)
	RelOp -> '<='                                      (86)
	RelOp -> '>'                                       (87)
	RelOp -> '>='                                      (88)
	RelOp -> '=='                                      (89)
	RelOp -> '!='                                      (90)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'->'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	':'            { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<='           { PT _ (TS _ 19) }
	'='            { PT _ (TS _ 20) }
	'=='           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	'[]'           { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'boolean'      { PT _ (TS _ 27) }
	'double'       { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'false'        { PT _ (TS _ 30) }
	'for'          { PT _ (TS _ 31) }
	'if'           { PT _ (TS _ 32) }
	'int'          { PT _ (TS _ 33) }
	'new'          { PT _ (TS _ 34) }
	'return'       { PT _ (TS _ 35) }
	'struct'       { PT _ (TS _ 36) }
	'true'         { PT _ (TS _ 37) }
	'typedef'      { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV $$) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	Ident           rule  1
	Double          rule  2
	Integer         rule  3
	String          rule  4
	Prog            rule  5
	TopDef          rules 6, 7, 8
	ListTopDef      rules 9, 10
	Arg             rule  11
	ListArg         rules 12, 13, 14
	Mem             rule  15
	ListMem         rules 16, 17
	Blk             rule  18
	ListStmt        rules 19, 20
	Stmt            rules 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Item            rules 34, 35
	ListItem        rules 36, 37
	Type            rules 38, 39, 40, 41, 42, 43
	ListType        rules 44, 45, 46
	Expr7           rules 47, 48
	Expr6           rules 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59
	Expr5           rules 60, 61, 62
	Expr4           rules 63, 64
	Expr3           rules 65, 66
	Expr2           rules 67, 68
	Expr1           rules 69, 70
	Expr            rules 71, 72
	Expr8           rule  73
	Expr9           rule  74
	ListExpr        rules 75, 76, 77
	NItem           rules 78, 79
	AddOp           rules 80, 81
	MulOp           rules 82, 83, 84
	RelOp           rules 85, 86, 87, 88, 89, 90

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProg -> . Prog                              (rule 0)

	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'int'          shift, and enter state 10
	'struct'       shift, and enter state 11
	'typedef'      shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Prog           goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'->'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	L_Ident        reduce using rule 1


State 3

	Type -> Ident .                                     (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'->'           reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'='            reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'||'           reduce using rule 43
	L_Ident        reduce using rule 43


State 4

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 9)
	ListTopDef -> TopDef . ListTopDef                   (rule 10)

	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'int'          shift, and enter state 10
	'struct'       shift, and enter state 11
	'typedef'      shift, and enter state 12
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 9

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 18
	Type           goto state 7

State 6

	Prog -> ListTopDef .                                (rule 5)

	%eof           reduce using rule 5


State 7

	TopDef -> Type . Ident '(' ListArg ')' Blk          (rule 6)
	Type -> Type . '[]'                                 (rule 38)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 16

State 8

	Type -> 'boolean' .                                 (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'->'           reduce using rule 41
	'.'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'='            reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	']'            reduce using rule 41
	'||'           reduce using rule 41
	L_Ident        reduce using rule 41


State 9

	Type -> 'double' .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'->'           reduce using rule 40
	'.'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'='            reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	']'            reduce using rule 40
	'||'           reduce using rule 40
	L_Ident        reduce using rule 40


State 10

	Type -> 'int' .                                     (rule 39)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'->'           reduce using rule 39
	'.'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	']'            reduce using rule 39
	'||'           reduce using rule 39
	L_Ident        reduce using rule 39


State 11

	TopDef -> 'struct' . Ident '{' ListMem '}' ';'      (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 15

State 12

	TopDef -> 'typedef' . 'struct' Ident '*' Ident ';'    (rule 7)

	'struct'       shift, and enter state 14


State 13

	Type -> 'void' .                                    (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'->'           reduce using rule 42
	'.'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'='            reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'||'           reduce using rule 42
	L_Ident        reduce using rule 42


State 14

	TopDef -> 'typedef' 'struct' . Ident '*' Ident ';'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 21

State 15

	TopDef -> 'struct' Ident . '{' ListMem '}' ';'      (rule 8)

	'{'            shift, and enter state 20


State 16

	TopDef -> Type Ident . '(' ListArg ')' Blk          (rule 6)

	'('            shift, and enter state 19


State 17

	Type -> Type '[]' .                                 (rule 38)

	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&&'           reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'->'           reduce using rule 38
	'.'            reduce using rule 38
	'/'            reduce using rule 38
	';'            reduce using rule 38
	'<'            reduce using rule 38
	'<='           reduce using rule 38
	'='            reduce using rule 38
	'=='           reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'['            reduce using rule 38
	'[]'           reduce using rule 38
	']'            reduce using rule 38
	'||'           reduce using rule 38
	L_Ident        reduce using rule 38


State 18

	ListTopDef -> TopDef ListTopDef .                   (rule 10)

	%eof           reduce using rule 10


State 19

	TopDef -> Type Ident '(' . ListArg ')' Blk          (rule 6)

	')'            reduce using rule 12
	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 26
	ListArg        goto state 27
	Type           goto state 28

State 20

	TopDef -> 'struct' Ident '{' . ListMem '}' ';'      (rule 8)

	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Mem            goto state 23
	ListMem        goto state 24
	Type           goto state 25

State 21

	TopDef -> 'typedef' 'struct' Ident . '*' Ident ';'    (rule 7)

	'*'            shift, and enter state 22


State 22

	TopDef -> 'typedef' 'struct' Ident '*' . Ident ';'    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 35

State 23

	ListMem -> Mem .                                    (rule 16)
	ListMem -> Mem . ListMem                            (rule 17)

	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 13
	'}'            reduce using rule 16
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Mem            goto state 23
	ListMem        goto state 34
	Type           goto state 25

State 24

	TopDef -> 'struct' Ident '{' ListMem . '}' ';'      (rule 8)

	'}'            shift, and enter state 33


State 25

	Mem -> Type . Ident ';'                             (rule 15)
	Type -> Type . '[]'                                 (rule 38)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 32

State 26

	ListArg -> Arg .                                    (rule 13)
	ListArg -> Arg . ',' ListArg                        (rule 14)

	')'            reduce using rule 13
	','            shift, and enter state 31


State 27

	TopDef -> Type Ident '(' ListArg . ')' Blk          (rule 6)

	')'            shift, and enter state 30


State 28

	Arg -> Type . Ident                                 (rule 11)
	Type -> Type . '[]'                                 (rule 38)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 29

State 29

	Arg -> Type Ident .                                 (rule 11)

	')'            reduce using rule 11
	','            reduce using rule 11


State 30

	TopDef -> Type Ident '(' ListArg ')' . Blk          (rule 6)

	'{'            shift, and enter state 41

	Blk            goto state 40

State 31

	ListArg -> Arg ',' . ListArg                        (rule 14)

	')'            reduce using rule 12
	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 26
	ListArg        goto state 39
	Type           goto state 28

State 32

	Mem -> Type Ident . ';'                             (rule 15)

	';'            shift, and enter state 38


State 33

	TopDef -> 'struct' Ident '{' ListMem '}' . ';'      (rule 8)

	';'            shift, and enter state 37


State 34

	ListMem -> Mem ListMem .                            (rule 17)

	'}'            reduce using rule 17


State 35

	TopDef -> 'typedef' 'struct' Ident '*' Ident . ';'    (rule 7)

	';'            shift, and enter state 36


State 36

	TopDef -> 'typedef' 'struct' Ident '*' Ident ';' .    (rule 7)

	'boolean'      reduce using rule 7
	'double'       reduce using rule 7
	'int'          reduce using rule 7
	'struct'       reduce using rule 7
	'typedef'      reduce using rule 7
	'void'         reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 37

	TopDef -> 'struct' Ident '{' ListMem '}' ';' .      (rule 8)

	'boolean'      reduce using rule 8
	'double'       reduce using rule 8
	'int'          reduce using rule 8
	'struct'       reduce using rule 8
	'typedef'      reduce using rule 8
	'void'         reduce using rule 8
	L_Ident        reduce using rule 8
	%eof           reduce using rule 8


State 38

	Mem -> Type Ident ';' .                             (rule 15)

	'boolean'      reduce using rule 15
	'double'       reduce using rule 15
	'int'          reduce using rule 15
	'void'         reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15


State 39

	ListArg -> Arg ',' ListArg .                        (rule 14)

	')'            reduce using rule 14


State 40

	TopDef -> Type Ident '(' ListArg ')' Blk .          (rule 6)

	'boolean'      reduce using rule 6
	'double'       reduce using rule 6
	'int'          reduce using rule 6
	'struct'       reduce using rule 6
	'typedef'      reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 41

	Blk -> '{' . ListStmt '}'                           (rule 18)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'true'         shift, and enter state 69
	'void'         shift, and enter state 13
	'while'        shift, and enter state 70
	'{'            shift, and enter state 41
	'}'            reduce using rule 19
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 42
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Blk            goto state 46
	ListStmt       goto state 47
	Stmt           goto state 48
	Type           goto state 49
	Expr7          goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57
	Expr8          goto state 58
	Expr9          goto state 59

State 42

	Stmt -> Ident . '++' ';'                            (rule 25)
	Stmt -> Ident . '--' ';'                            (rule 26)
	Type -> Ident .                                     (rule 43)
	Expr6 -> Ident .                                    (rule 52)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 57)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            shift, and enter state 112
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           shift, and enter state 113
	'-'            reduce using rule 52
	'--'           shift, and enter state 114
	'->'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'='            reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	'[]'           reduce using rule 43
	'||'           reduce using rule 52
	L_Ident        reduce using rule 43


State 43

	Expr6 -> Double .                                   (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'->'           reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'='            reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'||'           reduce using rule 54


State 44

	Expr6 -> Integer .                                  (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'->'           reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'='            reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'||'           reduce using rule 53


State 45

	Expr6 -> String .                                   (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'->'           reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'='            reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'||'           reduce using rule 58


State 46

	Stmt -> Blk .                                       (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'double'       reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_doubl        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 47

	Blk -> '{' ListStmt . '}'                           (rule 18)

	'}'            shift, and enter state 111


State 48

	ListStmt -> Stmt . ListStmt                         (rule 20)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'true'         shift, and enter state 69
	'void'         shift, and enter state 13
	'while'        shift, and enter state 70
	'{'            shift, and enter state 41
	'}'            reduce using rule 19
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 42
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Blk            goto state 46
	ListStmt       goto state 110
	Stmt           goto state 48
	Type           goto state 49
	Expr7          goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57
	Expr8          goto state 58
	Expr9          goto state 59

State 49

	Stmt -> Type . ListItem ';'                         (rule 23)
	Type -> Type . '[]'                                 (rule 38)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 107
	Item           goto state 108
	ListItem       goto state 109

State 50

	Expr6 -> Expr7 .                                    (rule 59)

	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'->'           reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'='            reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'||'           reduce using rule 59


State 51

	Stmt -> Expr6 . '=' Expr ';'                        (rule 24)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 49)
	Expr6 -> Expr6 . '->' Ident                         (rule 50)
	Expr6 -> Expr6 . '.' Ident                          (rule 51)
	Expr5 -> Expr6 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'-'            reduce using rule 62
	'->'           shift, and enter state 103
	'.'            shift, and enter state 104
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'='            shift, and enter state 105
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            shift, and enter state 106
	'||'           reduce using rule 62


State 52

	Expr4 -> Expr5 .                                    (rule 64)

	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'||'           reduce using rule 64


State 53

	Expr4 -> Expr4 . MulOp Expr5                        (rule 63)
	Expr3 -> Expr4 .                                    (rule 66)

	'!='           reduce using rule 66
	'%'            shift, and enter state 100
	'&&'           reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 101
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 102
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'||'           reduce using rule 66

	MulOp          goto state 99

State 54

	Expr3 -> Expr3 . AddOp Expr4                        (rule 65)
	Expr2 -> Expr3 .                                    (rule 68)

	'!='           reduce using rule 68
	'&&'           reduce using rule 68
	')'            reduce using rule 68
	'+'            shift, and enter state 97
	','            reduce using rule 68
	'-'            shift, and enter state 98
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'||'           reduce using rule 68

	AddOp          goto state 96

State 55

	Expr2 -> Expr2 . RelOp Expr3                        (rule 67)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 69)
	Expr1 -> Expr2 .                                    (rule 70)

	'!='           shift, and enter state 89
	'&&'           shift, and enter state 90
	')'            reduce using rule 70
	','            reduce using rule 70
	';'            reduce using rule 70
	'<'            shift, and enter state 91
	'<='           shift, and enter state 92
	'=='           shift, and enter state 93
	'>'            shift, and enter state 94
	'>='           shift, and enter state 95
	']'            reduce using rule 70
	'||'           reduce using rule 70

	RelOp          goto state 88

State 56

	Expr -> Expr1 . '||' Expr                           (rule 71)
	Expr -> Expr1 .                                     (rule 72)

	')'            reduce using rule 72
	','            reduce using rule 72
	';'            reduce using rule 72
	']'            reduce using rule 72
	'||'           shift, and enter state 87


State 57

	Stmt -> Expr . ';'                                  (rule 33)

	';'            shift, and enter state 86


State 58

	Expr7 -> Expr8 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'->'           reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'||'           reduce using rule 48


State 59

	Expr8 -> Expr9 .                                    (rule 73)

	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'->'           reduce using rule 73
	'.'            reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'='            reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'['            reduce using rule 73
	']'            reduce using rule 73
	'||'           reduce using rule 73


State 60

	Expr5 -> '!' . Expr5                                (rule 61)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 85
	Expr8          goto state 58
	Expr9          goto state 59

State 61

	Expr9 -> '(' . Expr ')'                             (rule 74)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 84
	Expr8          goto state 58
	Expr9          goto state 59

State 62

	Expr5 -> '-' . Expr5                                (rule 60)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 83
	Expr8          goto state 58
	Expr9          goto state 59

State 63

	Stmt -> ';' .                                       (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'double'       reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_doubl        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 64

	Expr6 -> 'false' .                                  (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'->'           reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'||'           reduce using rule 56


State 65

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 32)

	'('            shift, and enter state 82


State 66

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 30)

	'('            shift, and enter state 81


State 67

	Expr7 -> 'new' . NItem                              (rule 47)

	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 79
	NItem          goto state 80

State 68

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 78
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 77
	Expr8          goto state 58
	Expr9          goto state 59

State 69

	Expr6 -> 'true' .                                   (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'->'           reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'||'           reduce using rule 55


State 70

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 31)

	'('            shift, and enter state 74


State 71

	Double -> L_doubl .                                 (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'->'           reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'='            reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'||'           reduce using rule 2


State 72

	Integer -> L_integ .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'->'           reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'='            reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'||'           reduce using rule 3


State 73

	String -> L_quoted .                                (rule 4)

	'!='           reduce using rule 4
	'%'            reduce using rule 4
	'&&'           reduce using rule 4
	')'            reduce using rule 4
	'*'            reduce using rule 4
	'+'            reduce using rule 4
	','            reduce using rule 4
	'-'            reduce using rule 4
	'->'           reduce using rule 4
	'.'            reduce using rule 4
	'/'            reduce using rule 4
	';'            reduce using rule 4
	'<'            reduce using rule 4
	'<='           reduce using rule 4
	'='            reduce using rule 4
	'=='           reduce using rule 4
	'>'            reduce using rule 4
	'>='           reduce using rule 4
	'['            reduce using rule 4
	']'            reduce using rule 4
	'||'           reduce using rule 4


State 74

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 31)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 136
	Expr8          goto state 58
	Expr9          goto state 59

State 75

	Expr6 -> Ident .                                    (rule 52)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 57)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            shift, and enter state 112
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'->'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'||'           reduce using rule 52


State 76

	Expr6 -> Expr6 . '[' Expr ']'                       (rule 49)
	Expr6 -> Expr6 . '->' Ident                         (rule 50)
	Expr6 -> Expr6 . '.' Ident                          (rule 51)
	Expr5 -> Expr6 .                                    (rule 62)

	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'->'           shift, and enter state 103
	'.'            shift, and enter state 104
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            shift, and enter state 106
	']'            reduce using rule 62
	'||'           reduce using rule 62


State 77

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 135


State 78

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'double'       reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_doubl        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 79

	Type -> Type . '[]'                                 (rule 38)
	NItem -> Type . '[' Expr ']'                        (rule 78)
	NItem -> Type .                                     (rule 79)

	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&&'           reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'->'           reduce using rule 79
	'.'            reduce using rule 79
	'/'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'='            reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'['            shift, and enter state 134
			(reduce using rule 79)

	'[]'           shift, and enter state 17
	']'            reduce using rule 79
	'||'           reduce using rule 79


State 80

	Expr7 -> 'new' NItem .                              (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'->'           reduce using rule 47
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'||'           reduce using rule 47


State 81

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 133
	Expr8          goto state 58
	Expr9          goto state 59

State 82

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 32)

	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'int'          shift, and enter state 10
	'void'         shift, and enter state 13
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 132

State 83

	Expr5 -> '-' Expr5 .                                (rule 60)

	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'||'           reduce using rule 60


State 84

	Expr9 -> '(' Expr . ')'                             (rule 74)

	')'            shift, and enter state 131


State 85

	Expr5 -> '!' Expr5 .                                (rule 61)

	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'||'           reduce using rule 61


State 86

	Stmt -> Expr ';' .                                  (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'double'       reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_doubl        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 87

	Expr -> Expr1 '||' . Expr                           (rule 71)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 130
	Expr8          goto state 58
	Expr9          goto state 59

State 88

	Expr2 -> Expr2 RelOp . Expr3                        (rule 67)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 129
	Expr8          goto state 58
	Expr9          goto state 59

State 89

	RelOp -> '!=' .                                     (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'new'          reduce using rule 90
	'true'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_doubl        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 90

	Expr1 -> Expr2 '&&' . Expr1                         (rule 69)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 128
	Expr8          goto state 58
	Expr9          goto state 59

State 91

	RelOp -> '<' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_doubl        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 92

	RelOp -> '<=' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_doubl        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 93

	RelOp -> '==' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'new'          reduce using rule 89
	'true'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_doubl        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 94

	RelOp -> '>' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_doubl        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 95

	RelOp -> '>=' .                                     (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_doubl        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 96

	Expr3 -> Expr3 AddOp . Expr4                        (rule 65)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 127
	Expr8          goto state 58
	Expr9          goto state 59

State 97

	AddOp -> '+' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_doubl        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 98

	AddOp -> '-' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_doubl        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 99

	Expr4 -> Expr4 MulOp . Expr5                        (rule 63)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 126
	Expr8          goto state 58
	Expr9          goto state 59

State 100

	MulOp -> '%' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_doubl        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 101

	MulOp -> '*' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_doubl        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 102

	MulOp -> '/' .                                      (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_doubl        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 103

	Expr6 -> Expr6 '->' . Ident                         (rule 50)

	L_Ident        shift, and enter state 2

	Ident          goto state 125

State 104

	Expr6 -> Expr6 '.' . Ident                          (rule 51)

	L_Ident        shift, and enter state 2

	Ident          goto state 124

State 105

	Stmt -> Expr6 '=' . Expr ';'                        (rule 24)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 123
	Expr8          goto state 58
	Expr9          goto state 59

State 106

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 49)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 122
	Expr8          goto state 58
	Expr9          goto state 59

State 107

	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 121


State 108

	ListItem -> Item .                                  (rule 36)
	ListItem -> Item . ',' ListItem                     (rule 37)

	','            shift, and enter state 120
	';'            reduce using rule 36


State 109

	Stmt -> Type ListItem . ';'                         (rule 23)

	';'            shift, and enter state 119


State 110

	ListStmt -> Stmt ListStmt .                         (rule 20)

	'}'            reduce using rule 20


State 111

	Blk -> '{' ListStmt '}' .                           (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'double'       reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'struct'       reduce using rule 18
	'true'         reduce using rule 18
	'typedef'      reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_doubl        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	%eof           reduce using rule 18


State 112

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 57)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	')'            reduce using rule 75
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 117
	Expr8          goto state 58
	Expr9          goto state 59
	ListExpr       goto state 118

State 113

	Stmt -> Ident '++' . ';'                            (rule 25)

	';'            shift, and enter state 116


State 114

	Stmt -> Ident '--' . ';'                            (rule 26)

	';'            shift, and enter state 115


State 115

	Stmt -> Ident '--' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'double'       reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_doubl        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 116

	Stmt -> Ident '++' ';' .                            (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'double'       reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_doubl        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 117

	ListExpr -> Expr .                                  (rule 76)
	ListExpr -> Expr . ',' ListExpr                     (rule 77)

	')'            reduce using rule 76
	','            shift, and enter state 146


State 118

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 57)

	')'            shift, and enter state 145


State 119

	Stmt -> Type ListItem ';' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'double'       reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_doubl        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 120

	ListItem -> Item ',' . ListItem                     (rule 37)

	L_Ident        shift, and enter state 2

	Ident          goto state 107
	Item           goto state 108
	ListItem       goto state 144

State 121

	Item -> Ident '=' . Expr                            (rule 35)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 143
	Expr8          goto state 58
	Expr9          goto state 59

State 122

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 49)

	']'            shift, and enter state 142


State 123

	Stmt -> Expr6 '=' Expr . ';'                        (rule 24)

	';'            shift, and enter state 141


State 124

	Expr6 -> Expr6 '.' Ident .                          (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'->'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'='            reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'||'           reduce using rule 51


State 125

	Expr6 -> Expr6 '->' Ident .                         (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'->'           reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'='            reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'||'           reduce using rule 50


State 126

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'||'           reduce using rule 63


State 127

	Expr4 -> Expr4 . MulOp Expr5                        (rule 63)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 65)

	'!='           reduce using rule 65
	'%'            shift, and enter state 100
	'&&'           reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 101
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 102
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'||'           reduce using rule 65

	MulOp          goto state 99

State 128

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 69)

	')'            reduce using rule 69
	','            reduce using rule 69
	';'            reduce using rule 69
	']'            reduce using rule 69
	'||'           reduce using rule 69


State 129

	Expr3 -> Expr3 . AddOp Expr4                        (rule 65)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 67)

	'!='           reduce using rule 67
	'&&'           reduce using rule 67
	')'            reduce using rule 67
	'+'            shift, and enter state 97
	','            reduce using rule 67
	'-'            shift, and enter state 98
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'||'           reduce using rule 67

	AddOp          goto state 96

State 130

	Expr -> Expr1 '||' Expr .                           (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	';'            reduce using rule 71
	']'            reduce using rule 71


State 131

	Expr9 -> '(' Expr ')' .                             (rule 74)

	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&&'           reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'->'           reduce using rule 74
	'.'            reduce using rule 74
	'/'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'='            reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'['            reduce using rule 74
	']'            reduce using rule 74
	'||'           reduce using rule 74


State 132

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 32)
	Type -> Type . '[]'                                 (rule 38)

	'[]'           shift, and enter state 17
	L_Ident        shift, and enter state 2

	Ident          goto state 140

State 133

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 30)

	')'            shift, and enter state 139


State 134

	NItem -> Type '[' . Expr ']'                        (rule 78)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 138
	Expr8          goto state 58
	Expr9          goto state 59

State 135

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'double'       reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_doubl        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 136

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 31)

	')'            shift, and enter state 137


State 137

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 31)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'true'         shift, and enter state 69
	'void'         shift, and enter state 13
	'while'        shift, and enter state 70
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 42
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Blk            goto state 46
	Stmt           goto state 151
	Type           goto state 49
	Expr7          goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57
	Expr8          goto state 58
	Expr9          goto state 59

State 138

	NItem -> Type '[' Expr . ']'                        (rule 78)

	']'            shift, and enter state 150


State 139

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'true'         shift, and enter state 69
	'void'         shift, and enter state 13
	'while'        shift, and enter state 70
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 42
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Blk            goto state 46
	Stmt           goto state 149
	Type           goto state 49
	Expr7          goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57
	Expr8          goto state 58
	Expr9          goto state 59

State 140

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 32)

	':'            shift, and enter state 148


State 141

	Stmt -> Expr6 '=' Expr ';' .                        (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'double'       reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_doubl        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 142

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'->'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'||'           reduce using rule 49


State 143

	Item -> Ident '=' Expr .                            (rule 35)

	','            reduce using rule 35
	';'            reduce using rule 35


State 144

	ListItem -> Item ',' ListItem .                     (rule 37)

	';'            reduce using rule 37


State 145

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'->'           reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'||'           reduce using rule 57


State 146

	ListExpr -> Expr ',' . ListExpr                     (rule 77)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	')'            reduce using rule 75
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 117
	Expr8          goto state 58
	Expr9          goto state 59
	ListExpr       goto state 147

State 147

	ListExpr -> Expr ',' ListExpr .                     (rule 77)

	')'            reduce using rule 77


State 148

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 32)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	'false'        shift, and enter state 64
	'new'          shift, and enter state 67
	'true'         shift, and enter state 69
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 75
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Expr7          goto state 50
	Expr6          goto state 76
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 153
	Expr8          goto state 58
	Expr9          goto state 59

State 149

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 29)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'double'       reduce using rule 29
	'else'         shift, and enter state 152
			(reduce using rule 29)

	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_doubl        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 150

	NItem -> Type '[' Expr ']' .                        (rule 78)

	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&&'           reduce using rule 78
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'->'           reduce using rule 78
	'.'            reduce using rule 78
	'/'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'='            reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'['            reduce using rule 78
	']'            reduce using rule 78
	'||'           reduce using rule 78


State 151

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'double'       reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_doubl        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 152

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 30)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'true'         shift, and enter state 69
	'void'         shift, and enter state 13
	'while'        shift, and enter state 70
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 42
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Blk            goto state 46
	Stmt           goto state 155
	Type           goto state 49
	Expr7          goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57
	Expr8          goto state 58
	Expr9          goto state 59

State 153

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 32)

	')'            shift, and enter state 154


State 154

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 32)

	'!'            shift, and enter state 60
	'('            shift, and enter state 61
	'-'            shift, and enter state 62
	';'            shift, and enter state 63
	'boolean'      shift, and enter state 8
	'double'       shift, and enter state 9
	'false'        shift, and enter state 64
	'for'          shift, and enter state 65
	'if'           shift, and enter state 66
	'int'          shift, and enter state 10
	'new'          shift, and enter state 67
	'return'       shift, and enter state 68
	'true'         shift, and enter state 69
	'void'         shift, and enter state 13
	'while'        shift, and enter state 70
	'{'            shift, and enter state 41
	L_Ident        shift, and enter state 2
	L_doubl        shift, and enter state 71
	L_integ        shift, and enter state 72
	L_quoted       shift, and enter state 73

	Ident          goto state 42
	Double         goto state 43
	Integer        goto state 44
	String         goto state 45
	Blk            goto state 46
	Stmt           goto state 156
	Type           goto state 49
	Expr7          goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57
	Expr8          goto state 58
	Expr9          goto state 59

State 155

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'double'       reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_doubl        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 156

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'double'       reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_doubl        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 91
Number of terminals: 47
Number of non-terminals: 34
Number of states: 157
